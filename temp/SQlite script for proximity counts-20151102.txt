

#### Sightings big version ####
#### Create sightings ####

CREATE TABLE sightings (
  id MEDIUMINT(8),
  date DATETIME NOT NULL,
  time DATETIME NOT NULL,
  latitude MEDIUMINT(8),
  longitude MEDIUMINT(8),
  denname VARCHAR(60),
  habitat VARCHAR(8),
  agesex VARCHAR(8),
  name VARCHAR(60),
  x MEDIUMINT(8),
  y MEDIUMINT(8)
)


#### Fill sightings with values from .csv file ####
-- First make sure to add a column "id" to number the rows of the .CSV file (as MEDIUMINT(8) instead of PRIMARY KEY)

INSERT INTO sightings (id, date, time, latitude, longitude, denname, habitat, agesex, name, x, y)
      SELECT id, date, time, latitude, longitude, denname, habitat, agesex, name, x, y
      FROM sightingsCSV




#############################################################
#### DIRECTLY INSERT INTO sightingsshort OUTPUTS OF COUNTS???

ALTER TABLE sightings ADD COLUMN TotalCount MEDIUMINT(8) 
ALTER TABLE sightings ADD COLUMN FemaleCount MEDIUMINT(8) 
ALTER TABLE sightings ADD COLUMN MaleCount MEDIUMINT(8) 


#### TotalCount ####

UPDATE sightings 
SET TotalCount = (SELECT COUNT (distinct b.name) AS TotalCount from sightings AS a, sightings AS b
WHERE ((b.x-a.x)*(b.x-a.x)+ (b.y-a.y)*(b.y-a.y))<=0.0025
AND b.name != a.name
AND a.date=b.date
AND (strftime('%s',a.time) - strftime('%s',b.time))/60 between 0 and 15
GROUP BY a.id
HAVING sightings.id = a.id)


#### TotalCount: TRY: SET VALUE OF TotalCount to '4' for those that were with at least one: WORKS!! ####
UPDATE sightings
SET TotalCount = '4'
WHERE id IN (SELECT  a.id
         FROM sightings AS a, sightings AS b
         WHERE ((b.x-a.x)*(b.x-a.x)+ (b.y-a.y)*(b.y-a.y))<=0.0025
         AND b.name != a.name
         AND a.date=b.date
         AND (strftime('%s',a.time) - strftime('%s',b.time))/60 BETWEEN 0 AND 15
GROUP BY a.id)



#### FemaleCount ####

UPDATE sightings
SET FemaleCount = (SELECT COUNT (distinct b.name) AS FemaleCount from sightings AS a, sightings AS b
WHERE ((b.x-a.x)*(b.x-a.x)+ (b.y-a.y)*(b.y-a.y))<=0.0025
AND b.name != a.name
AND a.date=b.date
AND (strftime('%s',a.time) - strftime('%s',b.time))/60 between 0 and 15
AND (b.agesex = 'adf' OR b.agesex= 'sadf')
GROUP BY a.id
HAVING sightings.id = a.id)



#### MaleCount ####

UPDATE sightings 
SET MaleCount = (SELECT COUNT (distinct b.name) AS MaleCount from sightings AS a, sightings AS b
WHERE ((b.x-a.x)*(b.x-a.x)+ (b.y-a.y)*(b.y-a.y))<=0.0025
AND b.name != a.name
AND a.date=b.date
AND (strftime('%s',a.time) - strftime('%s',b.time))/60 between 0 and 15
AND (b.agesex = 'adm' OR b.agesex= 'nadm'  OR b.agesex= 'philopatric'  OR b.agesex= 'disperser%')
GROUP BY a.id
HAVING sightings.id = a.id)



#### TotalCount: UPDATE ZERO TotalCount for alone indiv directly in sightings main file: WORKS!! ####

UPDATE sightings 
SET TotalCount = '0'
WHERE id NOT IN (SELECT  a.id
         FROM sightings AS a, sightings AS b
         WHERE ((b.x-a.x)*(b.x-a.x)+ (b.y-a.y)*(b.y-a.y))<=0.0025
         AND b.name != a.name
         AND a.date=b.date
         AND (strftime('%s',a.time) - strftime('%s',b.time))/60 BETWEEN 0 AND 15)


#### FemaleCount: UPDATE ZERO FemaleCount for alone indiv directly in sightings main file: WORKS!! ####

UPDATE sightings
SET FemaleCount = '0'
WHERE id NOT IN (SELECT  a.id
	FROM sightings AS a, sightings AS b
        WHERE ((b.x-a.x)*(b.x-a.x)+ (b.y-a.y)*(b.y-a.y))<=0.0025
	AND b.name != a.name
	AND a.date=b.date
	AND (strftime('%s',a.time) - strftime('%s',b.time))/60 between 0 and 15
	AND (b.agesex = 'adf' OR b.agesex= 'sadf'))



#### MaleCount: UPDATE ZERO MaleCount for alone indiv directly in sightings main file: WORKS!! ####

UPDATE sightingsshort 
SET MaleCount = '0'
WHERE id NOT IN (SELECT  a.id
	FROM sightings AS a, sightings AS b
        WHERE ((b.x-a.x)*(b.x-a.x)+ (b.y-a.y)*(b.y-a.y))<=0.0025
	AND b.name != a.name
	AND a.date=b.date
	AND (strftime('%s',a.time) - strftime('%s',b.time))/60 between 0 and 15
	AND (b.agesex = 'adm' OR b.agesex= 'nadm'  OR b.agesex= 'philopatric'  OR b.agesex= 'disperser%'))





######################################################################
#### Version when working on short version of sightings file ####


#### Sightingsshort short version
#### Create sightingsshort with fewer columns & id_row as numeric ####

CREATE TABLE sightingsshort (
  id_row MEDIUMINT(8),
  date DATETIME NOT NULL,
  time DATETIME NOT NULL,
  agesex VARCHAR(8),
  name VARCHAR(60),
  x MEDIUMINT(8),
  y MEDIUMINT(8)
)


#### Fill sightingsshort with values from .csv file ####

INSERT INTO sightingsshort (id_row, date, time, agesex, name, x, y)
      SELECT id_row, date, time, agesex, name, x, y
      FROM sightingsshortCSV




#### GET TotalCounts for each row (a.id) ####
--the time difference has to be %seconds so /60 to get difference in minutes
-- to create identical table as original, use SELECT a.* instead of a.id 

SELECT  a.id, COUNT (distinct b.name) AS TotalCount from sightingsshort AS a, sightingsshort AS b
WHERE ((b.x-a.x)*(b.x-a.x)+ (b.y-a.y)*(b.y-a.y))<=0.0025
AND b.name != a.name
AND a.date=b.date
AND (strftime('%s',a.time) - strftime('%s',b.time))/60 between 0 and 15
GROUP BY a.id


-- To check if script did the right thing (show id of proximate indiv):
SELECT  a.id, a.name, b.name
from sightingsshort AS a, sightingsshort AS b
WHERE ((b.x-a.x)*(b.x-a.x)+ (b.y-a.y)*(b.y-a.y))<=0.0025
AND b.name != a.name
AND a.date=b.date
AND (strftime('%s',a.time) - strftime('%s',b.time))/60 between 0 and 15



-- To select all entries that were not selected in previous query (ie, alone)--
SELECT *
FROM sightingsshort AS c
WHERE c.id NOT IN
(SELECT  a.id
         FROM sightingsshort AS a, sightingsshort AS b
         WHERE ((b.x-a.x)*(b.x-a.x)+ (b.y-a.y)*(b.y-a.y))<=0.0025
         AND b.name != a.name
         AND a.date=b.date
         AND (strftime('%s',a.time) - strftime('%s',b.time))/60 BETWEEN 0 AND 15
GROUP BY a.id)




#### CREATE output table ####
CREATE TABLE output (
  id MEDIUMINT(8),
  TotalCount MEDIUMINT(8)
)

INSERT INTO output (id,TotalCount)
      SELECT id,TotalCount
      FROM outputCSV






################################################
#### ALTERNATIVE TO UPDATE FROM OTHER TABLE ####

#### UPDATE TotalCount of sightingsshort using count from output, for rows where a.id=a.id

## This works to put value '1':
UPDATE sightingsshort 
SET TotalCount = '1'
WHERE id IN (SELECT id FROM output b WHERE b.id=id)


## Yoohoo! Solution found!
UPDATE sightingsshort 
SET TotalCount = (SELECT TotalCount 
                  FROM output
                  WHERE id = sightingsshort.id)

## versus what suggested by internet: bracket is enough to get correct number at correct place:
UPDATE sightingsshort 
SET TotalCount = (SELECT TotalCount 
                  FROM output
                  WHERE id = sightingsshort.id)
WHERE id IN (SELECT id FROM output WHERE output.id = sightingsshort.id) -- this put at right place but wrong values
